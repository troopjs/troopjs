Ext.data.JsonP.log_sink_forward({"tagname":"class","name":"log.sink.forward","autodetected":{},"files":[{"filename":"forward.js","href":"forward.html#log-sink-forward"}],"implements":["log.console"],"mixins":["log.config"],"singleton":true,"inheritdoc":null,"aliases":{"feature":["logger"]},"members":[{"name":"sinks","tagname":"cfg","owner":"log.config","id":"cfg-sinks","meta":{}},{"name":"assert","tagname":"method","owner":"log.console","id":"method-assert","meta":{}},{"name":"debug","tagname":"method","owner":"log.console","id":"method-debug","meta":{"deprecated":{"text":"<p>An alias for <a href=\"#!/api/log.console-method-log\" rel=\"log.console-method-log\" class=\"docClass\">log</a>. This was added to improve compatibility with existing sites already using <code>debug()</code>. However, you should use <a href=\"#!/api/log.console-method-log\" rel=\"log.console-method-log\" class=\"docClass\">log</a> instead.</p>\n"}}},{"name":"dir","tagname":"method","owner":"log.console","id":"method-dir","meta":{}},{"name":"error","tagname":"method","owner":"log.console","id":"method-error","meta":{}},{"name":"info","tagname":"method","owner":"log.console","id":"method-info","meta":{}},{"name":"log","tagname":"method","owner":"log.console","id":"method-log","meta":{}},{"name":"time","tagname":"method","owner":"log.console","id":"method-time","meta":{}},{"name":"timeEnd","tagname":"method","owner":"log.console","id":"method-timeEnd","meta":{}},{"name":"trace","tagname":"method","owner":"log.console","id":"method-trace","meta":{}},{"name":"warn","tagname":"method","owner":"log.console","id":"method-warn","meta":{}}],"alternateClassNames":[],"id":"class-log.sink.forward","short_doc":"The forward log sink acts as a forwarder to other log sinks. ...","classIcon":"icon-singleton","superclasses":[],"subclasses":[],"mixedInto":[],"implementedBy":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Mixins</h4><div class='dependency'><a href='#!/api/log.config' rel='log.config' class='docClass'>log.config</a></div><h4>Implements</h4><div class='dependency'><a href='#!/api/log.console' rel='log.console' class='docClass'>log.console</a></div><h4>Files</h4><div class='dependency'><a href='source/forward.html#log-sink-forward' target='_blank'>forward.js</a></div></pre><div class='doc-contents'><p>The forward log sink acts as a forwarder to other log sinks.</p>\n\n<p>It's mainly configured via the <a href=\"#!/api/log.config-cfg-sinks\" rel=\"log.config-cfg-sinks\" class=\"docClass\">log.config.sinks</a> configuration.\nTo configure the forwarder for both the <a href=\"#!/api/log.sink.console\" rel=\"log.sink.console\" class=\"docClass\">log.sink.console</a> and the <a href=\"#!/api/log.sink.null\" rel=\"log.sink.null\" class=\"docClass\">log.sink.null</a> sink, one could\ndo this:</p>\n\n<pre><code>require.config({\n  \"map\": {\n    \"*\": {\n      \"troopjs-log/logger\": \"troopjs-log/sink/forward\" // Changes the framework logger\n    }\n  },\n  \"deps\": [ \"troopjs-log/config\", \"troopjs-log/sink/console\", \"troopjs-log/sink/null\" ],\n  \"callback\": function (loggingConfig, consoleSink, nullSink) {\n    loggingConfig.sinks.push(consoleSink, nullSink); // Add sinks\n  }\n});\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-sinks' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/log.config' rel='log.config' class='defined-in docClass'>log.config</a><br/><a href='source/config2.html#log-config-cfg-sinks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/log.config-cfg-sinks' class='name expandable'>sinks</a> : <a href=\"#!/api/log.console\" rel=\"log.console\" class=\"docClass\">log.console</a>[]<span class=\"signature\"></span></div><div class='description'><div class='short'>Sinks that the log.sink.forward logger will use ...</div><div class='long'><p>Sinks that the <a href=\"#!/api/log.sink.forward\" rel=\"log.sink.forward\" class=\"docClass\">log.sink.forward</a> logger will use</p>\n<p>Defaults to: <code>[]</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-assert' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/log.console' rel='log.console' class='defined-in docClass'>log.console</a><br/><a href='source/console2.html#log-console-method-assert' target='_blank' class='view-source'>view source</a></div><a href='#!/api/log.console-method-assert' class='name expandable'>assert</a>( <span class='pre'>expression, payload, [obj]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a message and stack trace to the log if first argument is false ...</div><div class='long'><p>Writes a message and stack trace to the log if first argument is false</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>expression</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>Conditional expression</p>\n</div></li><li><span class='pre'>payload</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>|<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>Initial payload</p>\n</div></li><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>... (optional)<div class='sub-desc'><p>Supplementary payloads</p>\n\n<ul>\n<li>If <code>payload</code> is of type <code>Object</code> the string representations of each of these objects are appended together in the order listed and output.</li>\n<li>If <code>payload</code> is of type <code>String</code> these are JavaScript objects with which to replace substitution strings within payload.</li>\n</ul>\n\n</div></li></ul></div></div></div><div id='method-debug' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/log.console' rel='log.console' class='defined-in docClass'>log.console</a><br/><a href='source/console2.html#log-console-method-debug' target='_blank' class='view-source'>view source</a></div><a href='#!/api/log.console-method-debug' class='name expandable'>debug</a>( <span class='pre'>payload, [obj]</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Writes a message to the log with level debug ...</div><div class='long'><p>Writes a message to the log with level <code>debug</code></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>An alias for <a href=\"#!/api/log.console-method-log\" rel=\"log.console-method-log\" class=\"docClass\">log</a>. This was added to improve compatibility with existing sites already using <code>debug()</code>. However, you should use <a href=\"#!/api/log.console-method-log\" rel=\"log.console-method-log\" class=\"docClass\">log</a> instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>payload</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>|<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>Initial payload</p>\n\n\n\n</div></li><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>... (optional)<div class='sub-desc'><p>Supplementary payloads</p>\n\n\n\n\n<ul>\n<li>If <code>payload</code> is of type <code>Object</code> the string representations of each of these objects are appended together in the order listed and output.</li>\n<li>If <code>payload</code> is of type <code>String</code> these are JavaScript objects with which to replace substitution strings within payload.</li>\n</ul>\n\n\n\n</div></li></ul></div></div></div><div id='method-dir' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/log.console' rel='log.console' class='defined-in docClass'>log.console</a><br/><a href='source/console2.html#log-console-method-dir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/log.console-method-dir' class='name expandable'>dir</a>( <span class='pre'>object</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Displays an interactive list of the properties of the specified JavaScript object. ...</div><div class='long'><p>Displays an interactive list of the properties of the specified JavaScript object. The output is presented as a hierarchical listing that let you see the contents of child objects.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>A JavaScript object whose properties should be output</p>\n</div></li></ul></div></div></div><div id='method-error' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/log.console' rel='log.console' class='defined-in docClass'>log.console</a><br/><a href='source/console2.html#log-console-method-error' target='_blank' class='view-source'>view source</a></div><a href='#!/api/log.console-method-error' class='name expandable'>error</a>( <span class='pre'>payload, [obj]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a message to the log with level error ...</div><div class='long'><p>Writes a message to the log with level <code>error</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>payload</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>|<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>Initial payload</p>\n\n\n\n</div></li><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>... (optional)<div class='sub-desc'><p>Supplementary payloads</p>\n\n\n\n\n<ul>\n<li>If <code>payload</code> is of type <code>Object</code> the string representations of each of these objects are appended together in the order listed and output.</li>\n<li>If <code>payload</code> is of type <code>String</code> these are JavaScript objects with which to replace substitution strings within payload.</li>\n</ul>\n\n\n\n</div></li></ul></div></div></div><div id='method-info' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/log.console' rel='log.console' class='defined-in docClass'>log.console</a><br/><a href='source/console2.html#log-console-method-info' target='_blank' class='view-source'>view source</a></div><a href='#!/api/log.console-method-info' class='name expandable'>info</a>( <span class='pre'>payload, [obj]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a message to the log with level info. ...</div><div class='long'><p>Writes a message to the log with level <code>info</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>payload</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>|<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>Initial payload</p>\n\n\n\n</div></li><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>... (optional)<div class='sub-desc'><p>Supplementary payloads</p>\n\n\n\n\n<ul>\n<li>If <code>payload</code> is of type <code>Object</code> the string representations of each of these objects are appended together in the order listed and output.</li>\n<li>If <code>payload</code> is of type <code>String</code> these are JavaScript objects with which to replace substitution strings within payload.</li>\n</ul>\n\n\n\n</div></li></ul></div></div></div><div id='method-log' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/log.console' rel='log.console' class='defined-in docClass'>log.console</a><br/><a href='source/console2.html#log-console-method-log' target='_blank' class='view-source'>view source</a></div><a href='#!/api/log.console-method-log' class='name expandable'>log</a>( <span class='pre'>payload, [obj]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a message to the log with level log ...</div><div class='long'><p>Writes a message to the log with level <code>log</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>payload</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>|<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>Initial payload</p>\n\n\n\n</div></li><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>... (optional)<div class='sub-desc'><p>Supplementary payloads</p>\n\n\n\n\n<ul>\n<li>If <code>payload</code> is of type <code>Object</code> the string representations of each of these objects are appended together in the order listed and output.</li>\n<li>If <code>payload</code> is of type <code>String</code> these are JavaScript objects with which to replace substitution strings within payload.</li>\n</ul>\n\n\n\n</div></li></ul></div></div></div><div id='method-time' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/log.console' rel='log.console' class='defined-in docClass'>log.console</a><br/><a href='source/console2.html#log-console-method-time' target='_blank' class='view-source'>view source</a></div><a href='#!/api/log.console-method-time' class='name expandable'>time</a>( <span class='pre'>timerName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts a timer you can use to track how long an operation takes. ...</div><div class='long'><p>Starts a timer you can use to track how long an operation takes. You give each timer a unique name, and may have up to 10,000 timers running on a given page.\nWhen you call <a href=\"#!/api/log.console-method-timeEnd\" rel=\"log.console-method-timeEnd\" class=\"docClass\">timeEnd</a> with the same name, the log will output the time, in milliseconds, that elapsed since the timer was started.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>timerName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The name to give the new timer. This will identify the timer; use the same name when calling <a href=\"#!/api/log.console-method-timeEnd\" rel=\"log.console-method-timeEnd\" class=\"docClass\">timeEnd</a> to stop the timer and get the time written to the log</p>\n</div></li></ul></div></div></div><div id='method-timeEnd' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/log.console' rel='log.console' class='defined-in docClass'>log.console</a><br/><a href='source/console2.html#log-console-method-timeEnd' target='_blank' class='view-source'>view source</a></div><a href='#!/api/log.console-method-timeEnd' class='name expandable'>timeEnd</a>( <span class='pre'>timerName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stops a timer that was previously started by calling time. ...</div><div class='long'><p>Stops a timer that was previously started by calling <a href=\"#!/api/log.console-method-time\" rel=\"log.console-method-time\" class=\"docClass\">time</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>timerName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The name of the timer to stop. Once stopped, the elapsed time is automatically written to the log</p>\n</div></li></ul></div></div></div><div id='method-trace' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/log.console' rel='log.console' class='defined-in docClass'>log.console</a><br/><a href='source/console2.html#log-console-method-trace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/log.console-method-trace' class='name expandable'>trace</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Outputs a stack trace to the log. ...</div><div class='long'><p>Outputs a stack trace to the log.</p>\n</div></div></div><div id='method-warn' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/log.console' rel='log.console' class='defined-in docClass'>log.console</a><br/><a href='source/console2.html#log-console-method-warn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/log.console-method-warn' class='name expandable'>warn</a>( <span class='pre'>payload, [obj]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a message to the log with level warn ...</div><div class='long'><p>Writes a message to the log with level <code>warn</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>payload</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>|<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>Initial payload</p>\n\n\n\n</div></li><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>... (optional)<div class='sub-desc'><p>Supplementary payloads</p>\n\n\n\n\n<ul>\n<li>If <code>payload</code> is of type <code>Object</code> the string representations of each of these objects are appended together in the order listed and output.</li>\n<li>If <code>payload</code> is of type <code>String</code> these are JavaScript objects with which to replace substitution strings within payload.</li>\n</ul>\n\n\n\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"singleton":true}});